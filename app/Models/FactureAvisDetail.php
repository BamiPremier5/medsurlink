<?php

namespace App\Models;

use Carbon\Carbon;
use Cviebrock\EloquentSluggable\Sluggable;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Str;

/**
 * App\Models\FactureAvisDetail
 *
 * @property int $id
 * @property int $medecin_avis_id
 * @property int $facture_avis_id
 * @property string|null $total_montant
 * @property string|null $medicasure_montant
 * @property string|null $association_montant
 * @property string|null $medecin_avis_montant
 * @property string $slug
 * @property \Illuminate\Support\Carbon|null $deleted_at
 * @property \Illuminate\Support\Carbon|null $created_at
 * @property \Illuminate\Support\Carbon|null $updated_at
 * @property-read \App\Models\EtablissementExercice $etablissement
 * @property-read \App\Models\FactureAvis $factureAvis
 * @property-read mixed $name_and_timestamp
 * @property-read \App\Models\MedecinAvis $medecinAvis
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail findSimilarSlugs($attribute, $config, $slug)
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail newQuery()
 * @method static \Illuminate\Database\Query\Builder|FactureAvisDetail onlyTrashed()
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail query()
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail whereAssociationMontant($value)
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail whereDeletedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail whereFactureAvisId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail whereMedecinAvisId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail whereMedecinAvisMontant($value)
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail whereMedicasureMontant($value)
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail whereSlug($value)
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail whereTotalMontant($value)
 * @method static \Illuminate\Database\Eloquent\Builder|FactureAvisDetail whereUpdatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|FactureAvisDetail withTrashed()
 * @method static \Illuminate\Database\Query\Builder|FactureAvisDetail withoutTrashed()
 * @mixin \Eloquent
 */
class FactureAvisDetail extends Model
{
    use SoftDeletes;
    use Sluggable;

    protected $fillable = [
        "facture_avis_id",
        "medecin_avis_id",
        "total_montant",
        "medicasure_montant",
        "association_montant",
        "medecin_avis_montant",
        "slug",
    ];

    public function sluggable()
    {
        return [
            'slug' => [
                'source' => 'NameAndTimestamp'
            ]
        ];
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        //On définit le créateur à la création du suivi
    }

    public function getNameAndTimestampAttribute() {
        return Str::random(16).' '.Carbon::now()->timestamp;
    }

    public function medecinAvis(){
        return $this->belongsTo(MedecinAvis::class,'medecin_avis_id','id');
    }

    public function factureAvis(){
        return $this->belongsTo(factureAvis::class,'facture_avis_id','id');
    }

    public function etablissement(){
        return $this->belongsTo(EtablissementExercice::class,'etablissement_id','id');
    }
}