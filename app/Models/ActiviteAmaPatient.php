<?php

namespace App\Models;

use App\User;
use Carbon\Carbon;
use Illuminate\Support\Str;
use App\Models\ActivitesAma;
use Illuminate\Support\Facades\Auth;
use Illuminate\Database\Eloquent\Model;
use Cviebrock\EloquentSluggable\Sluggable;
use Illuminate\Database\Eloquent\SoftDeletes;

class ActiviteAmaPatient extends Model
{
    use Sluggable;
    use SoftDeletes;

    protected $table = 'activites_ama_patient';
    protected $fillable = [
        'activite_ama_id',
        'etablissement_id',
        'affiliation_id',
        'ligne_temps_id',
        'commentaire',
        'patient_id',
        'creator',
        'statut',
        'date_cloture',
        'slug',
    ];

    /**
     * Return the sluggable configuration array for this model.
     *
     * @return array
     */
    public function sluggable()
    {
        return [
            'slug' => [
                'source' => 'DossierAndTimestamp'
            ]
        ];
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        ActiviteAmaPatient::creating(function ($activite){
            $activite->creator = Auth::id();
        });

    }

    public function getDossierAndTimestampAttribute() {
        return Str::random(10) . ' ' .Carbon::now()->timestamp;
    }

    public function activitesAma(){
        return $this->belongsTo(ActivitesAma::class,'activite_ama_id','id');
    }

    public function createur(){
        return $this->belongsTo(User::class,'creator','id');
    }
    public function updatedBy(){
        return $this->belongsTo(User::class,'updated_by','id');
    }
    public function patient(){
        return $this->belongsTo(Patient::class,'patient_id','user_id');
    }


    public function affiliation(){
        return $this->belongsTo(Affiliation::class);
    }

    public function ligne_temps(){
        return $this->belongsTo(LigneDeTemps::class);
    }

    public function motif(){
        return $this->belongsTo(Motif::class);
    }

    public function etablissement(){
        return $this->belongsTo(EtablissementExercice::class);
    }

    public function delai_operations()
    {
        return $this->morphMany(DelaiOperation::class, 'delai_operationable');
    }

}
